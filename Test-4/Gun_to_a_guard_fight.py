# Dear whoever is reading this
# I got bored and decided to see if i could run obfuscated code here
# It looks like I can.
# Good luck figuring out what this does. I barely remember anymore.
# On the flip side, I know how to obfuscate code now!

import math #line:1
def commonFactor (O0OOO00O0O0O00O0O ,OO0OOOOOO0OO000O0 ):#line:3
    if O0OOO00O0O0O00O0O ==0 :return 'inf'#line:4
    if OO0OOOOOO0OO000O0 ==0 :return 0 #line:5
    OO000OOO0O000O0O0 =max (O0OOO00O0O0O00O0O ,OO0OOOOOO0OO000O0 )#line:6
    OOOOOOOO0OOO0OOO0 =min (O0OOO00O0O0O00O0O ,OO0OOOOOO0OO000O0 )#line:7
    while (OOOOOOOO0OOO0OOO0 !=0 ):#line:8
        OO000O0O00O0O00O0 =OOOOOOOO0OOO0OOO0 #line:9
        OOOOOOOO0OOO0OOO0 =OO000OOO0O000O0O0 %OO000O0O00O0O00O0 #line:10
        OO000OOO0O000O0O0 =OO000O0O00O0O00O0 #line:11
    return abs (OO000OOO0O000O0O0 )#line:12
def position (O0O00O000OOOO00OO ,OOO0OOO000O0O00OO ,OOO0OOO0O0O00O0O0 ,OOOOO00000OO0OO00 ):#line:14
    OO0OO0O0OO0OOOOOO =[]#line:15
    O0OO00OO0O0O00OO0 =[]#line:16
    O00O0O000000O00OO =O0O00O000OOOO00OO [0 ]#line:17
    OOOO00OO00OO0O0O0 =O0O00O000OOOO00OO [1 ]#line:18
    O0O00O0O0O0OO00OO =OOO0OOO000O0O00OO [0 ]#line:19
    O00OO0000OOOO00OO =OOO0OOO000O0O00OO [1 ]#line:20
    OOO00OOOO000O000O =OOO0OOO0O0O00O0O0 [0 ]#line:21
    O0000OOOOOOOO000O =OOO0OOO0O0O00O0O0 [1 ]#line:22
    for O0000OO000OOO0OO0 ,O00000O00OOO00O00 in OOOOO00000OO0OO00 [(0 ,0 )]:#line:23
        OO0OO0O0OO0OOOOOO .append ((O0000OO000OOO0OO0 ,O00000O00OOO00O00 ))#line:24
        O0OO00OO0O0O00OO0 .append ((O0000OO000OOO0OO0 +OOO00OOOO000O000O -O0O00O0O0O0OO00OO ,O00000O00OOO00O00 +O0000OOOOOOOO000O -O00OO0000OOOO00OO ))#line:25
    for O0000OO000OOO0OO0 ,O00000O00OOO00O00 in OOOOO00000OO0OO00 [(1 ,0 )]:#line:26
        OO0OO0O0OO0OOOOOO .append ((O0000OO000OOO0OO0 +O00O0O000000O00OO -2 *O0O00O0O0O0OO00OO ,O00000O00OOO00O00 ))#line:27
        O0OO00OO0O0O00OO0 .append ((O0000OO000OOO0OO0 +O00O0O000000O00OO -OOO00OOOO000O000O -O0O00O0O0O0OO00OO ,O00000O00OOO00O00 +O0000OOOOOOOO000O -O00OO0000OOOO00OO ))#line:28
    for O0000OO000OOO0OO0 ,O00000O00OOO00O00 in OOOOO00000OO0OO00 [(0 ,1 )]:#line:29
        OO0OO0O0OO0OOOOOO .append ((O0000OO000OOO0OO0 ,O00000O00OOO00O00 +OOOO00OO00OO0O0O0 -2 *O00OO0000OOOO00OO ))#line:30
        O0OO00OO0O0O00OO0 .append ((O0000OO000OOO0OO0 +OOO00OOOO000O000O -O0O00O0O0O0OO00OO ,O00000O00OOO00O00 +OOOO00OO00OO0O0O0 -O0000OOOOOOOO000O -O00OO0000OOOO00OO ))#line:31
    for O0000OO000OOO0OO0 ,O00000O00OOO00O00 in OOOOO00000OO0OO00 [(1 ,1 )]:#line:32
        OO0OO0O0OO0OOOOOO .append ((O0000OO000OOO0OO0 +O00O0O000000O00OO -2 *O0O00O0O0O0OO00OO ,O00000O00OOO00O00 +OOOO00OO00OO0O0O0 -2 *O00OO0000OOOO00OO ))#line:33
        O0OO00OO0O0O00OO0 .append ((O0000OO000OOO0OO0 +O00O0O000000O00OO -OOO00OOOO000O000O -O0O00O0O0O0OO00OO ,O00000O00OOO00O00 +OOOO00OO00OO0O0O0 -O0000OOOOOOOO000O -O00OO0000OOOO00OO ))#line:34
    return OO0OO0O0OO0OOOOOO ,O0OO00OO0O0O00OO0 #line:35
def origin (O0O0OO0OOO0O000OO ,OOO00O0OOO0O00OOO ):#line:37
    O00OOO0O0O0000O0O ={}#line:38
    O00OOO0O0O0000O0O [(0 ,0 )]=[]#line:39
    O00OOO0O0O0000O0O [(1 ,0 )]=[]#line:40
    O00OOO0O0O0000O0O [(0 ,1 )]=[]#line:41
    O00OOO0O0O0000O0O [(1 ,1 )]=[]#line:42
    O00O00OO0OO0O0O00 =O0O0OO0OOO0O000OO [0 ]#line:43
    O00OO0O0OO0000000 =O0O0OO0OOO0O000OO [1 ]#line:44
    OO0OO0OOO0OOO00O0 =(OOO00O0OOO0O00OOO /O00O00OO0OO0O0O00 )+1 #line:45
    OO0OOOO0000OO00OO =(OOO00O0OOO0O00OOO /O00OO0O0OO0000000 )+1 #line:46
    for O0O0O0O00000OOOOO in range (-OO0OO0OOO0OOO00O0 ,OO0OO0OOO0OOO00O0 +1 ):#line:47
        for O000000000O0O0O00 in range (-OO0OOOO0000OO00OO ,OO0OOOO0000OO00OO +1 ):#line:48
            if O0O0O0O00000OOOOO %2 ==O000000000O0O0O00 %2 :#line:49
                if O0O0O0O00000OOOOO %2 ==0 :#line:50
                    O00OOO0O0O0000O0O [(0 ,0 )].append ((O0O0O0O00000OOOOO *O00O00OO0OO0O0O00 ,O000000000O0O0O00 *O00OO0O0OO0000000 ))#line:51
                else :#line:52
                    O00OOO0O0O0000O0O [(1 ,1 )].append ((O0O0O0O00000OOOOO *O00O00OO0OO0O0O00 ,O000000000O0O0O00 *O00OO0O0OO0000000 ))#line:53
            else :#line:54
                if O0O0O0O00000OOOOO %2 ==0 :#line:55
                    O00OOO0O0O0000O0O [(0 ,1 )].append ((O0O0O0O00000OOOOO *O00O00OO0OO0O0O00 ,O000000000O0O0O00 *O00OO0O0OO0000000 ))#line:56
                else :#line:57
                    O00OOO0O0O0000O0O [(1 ,0 )].append ((O0O0O0O00000OOOOO *O00O00OO0OO0O0O00 ,O000000000O0O0O00 *O00OO0O0OO0000000 ))#line:58
    return O00OOO0O0O0000O0O #line:59
def countPossibilities (OOOOO000O0OOO00O0 ,O000O00OOO0O0O0O0 ):#line:61
    global possibilities #line:62
    possibilities ={}#line:63
    for O0O0O00OOOO00O0O0 ,OOO0OO0O0O0000OOO in O000O00OOO0O0O0O0 :#line:64
        OO00O0OOO000OOO00 =commonFactor (O0O0O00OOOO00O0O0 ,OOO0OO0O0O0000OOO )#line:65
        if OO00O0OOO000OOO00 ==0 :#line:66
            if (0 not in possibilities or possibilities [0 ]>abs (O0O0O00OOOO00O0O0 )):#line:67
                possibilities [0 ]=abs (O0O0O00OOOO00O0O0 )#line:68
        elif OO00O0OOO000OOO00 =='inf':#line:69
            if ('inf'not in possibilities or possibilities ['inf']>abs (OOO0OO0O0O0000OOO )):#line:70
                possibilities ['inf']=abs (OOO0OO0O0O0000OOO )#line:71
        elif (O0O0O00OOOO00O0O0 /OO00O0OOO000OOO00 ,OOO0OO0O0O0000OOO /OO00O0OOO000OOO00 )not in possibilities or possibilities [(O0O0O00OOOO00O0O0 /OO00O0OOO000OOO00 ,OOO0OO0O0O0000OOO /OO00O0OOO000OOO00 )]>math .sqrt (O0O0O00OOOO00O0O0 **2 +OOO0OO0O0O0000OOO **2 ):#line:72
            possibilities [(O0O0O00OOOO00O0O0 /OO00O0OOO000OOO00 ,OOO0OO0O0O0000OOO /OO00O0OOO000OOO00 )]=math .sqrt (O0O0O00OOOO00O0O0 **2 +OOO0OO0O0O0000OOO **2 )#line:73
    for O0O0O00OOOO00O0O0 ,OOO0OO0O0O0000OOO in OOOOO000O0OOO00O0 :#line:74
        OO00O0OOO000OOO00 =commonFactor (O0O0O00OOOO00O0O0 ,OOO0OO0O0O0000OOO )#line:75
        if OO00O0OOO000OOO00 ==0 :#line:76
            if 0 in possibilities and possibilities [0 ]>abs (O0O0O00OOOO00O0O0 ):#line:77
                del possibilities [0 ]#line:78
        elif OO00O0OOO000OOO00 =='inf':#line:79
            if 'inf'in possibilities and possibilities ['inf']>abs (OOO0OO0O0O0000OOO ):#line:80
                del possibilities ['inf']#line:81
        elif (O0O0O00OOOO00O0O0 /OO00O0OOO000OOO00 ,OOO0OO0O0O0000OOO /OO00O0OOO000OOO00 )in possibilities and possibilities [(O0O0O00OOOO00O0O0 /OO00O0OOO000OOO00 ,OOO0OO0O0O0000OOO /OO00O0OOO000OOO00 )]>math .sqrt (O0O0O00OOOO00O0O0 **2 +OOO0OO0O0O0000OOO **2 ):#line:82
            del possibilities [(O0O0O00OOOO00O0O0 /OO00O0OOO000OOO00 ,OOO0OO0O0O0000OOO /OO00O0OOO000OOO00 )]#line:83
    return possibilities #line:84
def answer (O0OO000OO00OOOOO0 ,O000O00OO0O0OO0OO ,OOO00OOO0000OO0OO ,O0000O00OOO0O0O00 ):#line:86
    O000000000OO0OO0O =origin (O0OO000OO00OOOOO0 ,O0000O00OOO0O0O00 )#line:87
    OO00O0OO00O0OO000 ,O0000OO0000O0OO0O =position (O0OO000OO00OOOOO0 ,O000O00OO0O0OO0OO ,OOO00OOO0000OO0OO ,O000000000OO0OO0O )#line:88
    OO00O0OO00O0OO000 =[OO00O00OO0O000O0O for OO00O00OO0O000O0O in OO00O0OO00O0OO000 if math .sqrt (OO00O00OO0O000O0O [0 ]**2 +OO00O00OO0O000O0O [1 ]**2 )<=O0000O00OOO0O0O00 and not (OO00O00OO0O000O0O [0 ]==OO00O00OO0O000O0O [1 ]==0 )]#line:89
    O0000OO0000O0OO0O =[O00O0OO0O00OOO00O for O00O0OO0O00OOO00O in O0000OO0000O0OO0O if math .sqrt (O00O0OO0O00OOO00O [0 ]**2 +O00O0OO0O00OOO00O [1 ]**2 )<=O0000O00OOO0O0O00 and not (O00O0OO0O00OOO00O [0 ]==O00O0OO0O00OOO00O [1 ]==0 )]#line:90
    OO00OO0O0O000OO00 =countPossibilities (OO00O0OO00O0OO000 ,O0000OO0000O0OO0O )#line:91
    return len (OO00OO0O0O000OO00 )